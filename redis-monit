#!/bin/bash
#################################################################################################################################
# AUTH: Matthew Baum
# DATE: 2019/04
# ARGS:
#   - REDIS_PORT: Port on which to connect to redis server
#   - REDIS_PASS: Password to connect to redis with
#   - OUT_FILE: output file name in which to save stats
#
# DEPS: echo, tr, wc, time, perl, sleep, redis-cli (https://redis.io/topics/rediscli)
#
# DESC: simple bash script for automated stats polling on a redis server. can be used to collect data during a load test
#
# NOTE: Execute like: ./redis-monit 6379 [PASSWORD] stats.csv
# NOTE: Modify list of fields captured from redis by editing the "FIELDS" constant. Field names are separated by '|' chars.
#################################################################################################################################
readonly FIELDS="used_memory|used_memory_rss|total_system_memory|used_cpu_sys|used_cpu_user|keyspace_hits|keyspace_misses|expired_keys|evicted_keys"

if [ $# -lt 3 ]
then
  echo "**** ERROR: Must pass at least 3 args to this script: 1=redis_port, 2=redis_pw, 3=out_file"
  echo "\tFound $# args: #@"
  echo "\texiting..."
  exit 1
fi

# calculate the number of fields to extract
field_num=$(echo ${FIELDS} | tr -cd '|' | wc -m)
field_num=$((${field_num} + 1))

# init output file with column headings
echo -n "time," > $3
redis-cli -p $1 -a $2 INFO | perl -0777 -ne 'my $m=0; while(/('"${FIELDS}"'):/g){$m+=1; if($m=='"${field_num}"'){print "$1\n";}else{print "$1,";}}' >> $3

# FOREVER: poll redis and dump stats to file
while true
do
  echo -n `date +"%T",` >> $3
  redis-cli -p $1 -a $2 INFO | perl -0777 -ne 'my $m=0; while(/('"${FIELDS}"'):([^\s]+)/g){$m+=1; if($m=='"${field_num}"'){print "$2\n";}else{print "$2,";}}' >> $3
  sleep 5
done